{
  "openapi": "3.0.0",
  "info": {
    "title": "NFP107 API - Gestion des Utilisateurs avec Rôles",
    "version": "1.0.0",
    "description": "API pour gérer les utilisateurs avec système de rôles (étudiant, professeur, secrétaire)"
  },
  "servers": [
    { "url": "http://localhost:3000" }
  ],
  "paths": {
    "/planning": {
      "get": {
        "summary": "Lister les plannings",
        "tags": ["Planning"],
        "responses": {
          "200": {
            "description": "Liste des plannings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Planning" }
                }
              }
            }
          },
          "500": { "description": "Erreur interne du serveur" }
        }
      },
      "post": {
        "summary": "Créer un planning",
        "tags": ["Planning"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePlanningInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Planning créé",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Planning" }
              }
            }
          },
          "400": { "description": "Données manquantes ou invalides" },
          "409": { "description": "Conflit de planning (salle déjà occupée)" },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/planning/{id}": {
      "get": {
        "summary": "Récupérer un planning par ID",
        "tags": ["Planning"],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Planning",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Planning" } }
            }
          },
          "400": { "description": "ID du planning invalide" },
          "404": { "description": "Planning introuvable" },
          "500": { "description": "Erreur interne du serveur" }
        }
      },
      "put": {
        "summary": "Modifier un planning",
        "tags": ["Planning"],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePlanningInput" } }
          }
        },
        "responses": {
          "200": {
            "description": "Planning modifié",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Planning" } }
            }
          },
          "400": { "description": "Données invalides ou références invalides" },
          "409": { "description": "Conflit de planning (salle déjà occupée)" },
          "404": { "description": "Planning introuvable" },
          "500": { "description": "Erreur interne du serveur" }
        }
      },
      "delete": {
        "summary": "Supprimer un planning",
        "tags": ["Planning"],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "204": { "description": "Planning supprimé" },
          "400": { "description": "ID du planning invalide" },
          "404": { "description": "Planning introuvable" },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/Utilisateur/login": {
      "post": {
        "summary": "Connexion utilisateur",
        "description": "Authentification d'un utilisateur et génération d'un token JWT avec rôle",
        "tags": ["Authentification"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["identifiant", "password"],
                "properties": {
                  "identifiant": { 
                    "type": "string",
                    "description": "Identifiant de l'utilisateur"
                  },
                  "password": { 
                    "type": "string", 
                    "format": "password",
                    "description": "Mot de passe de l'utilisateur"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentification réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { 
                      "type": "string",
                      "description": "Token JWT contenant les informations utilisateur et rôle"
                    },
                    "user": { "$ref": "#/components/schemas/UtilisateurAvecRole" }
                  }
                }
              }
            }
          },
          "400": { 
            "description": "Données manquantes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { 
            "description": "Identifiants invalides",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/Utilisateur": {
      "get": {
        "summary": "Lister tous les utilisateurs",
        "description": "Récupère la liste de tous les utilisateurs (authentification requise)",
        "tags": ["Utilisateur"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Liste des personnes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtilisateurSansPassword" }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/Utilisateur/create": {
      "post": {
        "summary": "Créer un nouvel utilisateur",
        "description": "Créer un nouvel utilisateur (accès réservé aux secrétaires)",
        "tags": ["Utilisateur"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUtilisateurInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Personne créée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UtilisateurSansPassword" }
              }
            }
          },
          "400": { 
            "description": "Données manquantes ou invalides",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { 
            "description": "Accès refusé - Rôle secrétaire requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          },
          "409": { 
            "description": "Conflit - identifiant ou email déjà existant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/Utilisateur/me": {
      "get": {
        "summary": "Profil utilisateur courant",
        "description": "Récupère les informations de l'utilisateur connecté avec son rôle",
        "tags": ["Utilisateur"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Profil utilisateur avec rôle",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UtilisateurAvecRole" }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "404": { "description": "Utilisateur introuvable" },
          "500": { "description": "Erreur interne du serveur" }
        }
      }
    },
    "/Utilisateur/my-role": {
      "get": {
        "summary": "Informations de rôle de l'utilisateur",
        "description": "Récupère les informations de rôle de l'utilisateur connecté",
        "tags": ["Rôles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Informations de rôle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "role": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/UtilisateurToken" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" }
        }
      }
    },
    "/Utilisateur/etudiant-only": {
      "get": {
        "summary": "Route réservée aux étudiants",
        "description": "Route accessible uniquement aux utilisateurs avec le rôle 'etudiant'",
        "tags": ["Rôles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Accès autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/UtilisateurToken" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { 
            "description": "Accès refusé - Rôle étudiant requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Utilisateur/professeur-only": {
      "get": {
        "summary": "Route réservée aux professeurs",
        "description": "Route accessible uniquement aux utilisateurs avec le rôle 'professeur'",
        "tags": ["Rôles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Accès autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/UtilisateurToken" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { 
            "description": "Accès refusé - Rôle professeur requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Utilisateur/secretaire-only": {
      "get": {
        "summary": "Route réservée aux secrétaires",
        "description": "Route accessible uniquement aux utilisateurs avec le rôle 'secretaire'",
        "tags": ["Rôles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Accès autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/UtilisateurToken" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { 
            "description": "Accès refusé - Rôle secrétaire requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "erreur": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Utilisateur/admin": {
      "get": {
        "summary": "Route réservée aux administrateurs",
        "description": "Route accessible aux utilisateurs avec le rôle 'professeur' ou 'secretaire'",
        "tags": ["Rôles"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Accès autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/UtilisateurToken" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token manquant ou invalide" },
          "403": { 
            "description": "Accès refusé - Rôle professeur ou secrétaire requis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Enseignant" }
                }
              }
            }
          }
        }
      }
    },
    "/UE": {
      "get": {
        "summary": "Lister les UE",
        "tags": ["UE"],
        "responses": {
          "200": {
            "description": "Liste des UE",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UE" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une UE",
        "tags": ["UE"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUEInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "UE créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UE" }
              }
            }
          },
          "400": { "description": "Bad request" }
        }
      },
      "put": {
        "summary": "Modifier une UE",
        "tags": ["UE"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUEInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "UE modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UE" }
              }
            }
          },
          "400": { "description": "Code d'UE invalide" },
          "404": { "description": "UE introuvable" }
        }
      }
    },
    "/UE/{code}": {
      "delete": {
        "summary": "Supprimer une UE par code",
        "tags": ["Personne"],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": { "type": "string" },
            "description": "Code de l'UE (clé primaire)"
          }
        ],
        "responses": {
          "204": { "description": "UE supprimée" },
          "400": { "description": "Code invalide" },
          "404": { "description": "UE introuvable" }
        }
      }
    },
    "/Promo": {
      "get": {
        "summary": "Lister les promos",
        "tags": ["Promo"],
        "responses": {
          "200": {
            "description": "Liste des promos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Promo" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une promo",
        "tags": ["Promo"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromoInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promo créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Promo" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (Id_Promo déjà existant)" }
        }
      },
      "put": {
        "summary": "Modifier une promo",
        "tags": ["Promo"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromoInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promo modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Promo" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit" }
        }
      }
    },
    "/Promo/{Id_Promo}": {
      "delete": {
        "summary": "Supprimer une promo par Id_Promo",
        "tags": ["Promo"],
        "parameters": [
          {
            "in": "path",
            "name": "Id_Promo",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id_Promo de la promo (clé primaire)"
          }
        ],
        "responses": {
          "204": { "description": "Promo supprimée" },
          "400": { "description": "Id_Promo invalide" },
          "404": { "description": "Promo introuvable" }
        }
      }
    },
    "/Note": {
      "get": {
        "summary": "Lister les notes",
        "tags": ["Note"],
        "responses": {
          "200": {
            "description": "Liste des notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Note" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une note",
        "tags": ["Note"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (note déjà existante)" }
        }
      },
      "put": {
        "summary": "Modifier une note",
        "tags": ["Note"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNoteInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit" }
        }
      }
    },
    "/Note/{Id_Note}": {
      "delete": {
        "summary": "Supprimer une note par Id_Note",
        "tags": ["Note"],
        "parameters": [
          {
            "in": "path",
            "name": "Id_Note",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id_Note de la note (clé primaire)"
          }
        ],
        "responses": {
          "204": { "description": "Note supprimée" },
          "400": { "description": "Id_Note invalide" },
          "404": { "description": "Note introuvable" }
        }
      }
    },
    "/Filiere": {
      "get": {
        "summary": "Lister les filières",
        "tags": ["Filiere"],
        "responses": {
          "200": {
            "description": "Liste des filières",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Filiere" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une filière",
        "tags": ["Filiere"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFiliereInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Filière créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Filiere" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (filière déjà existante)" }
        }
      },
      "put": {
        "summary": "Modifier une filière",
        "tags": ["Filiere"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFiliereInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Filière modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Filiere" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit" }
        }
      }
    },
    "/Filiere/{Id_filiere}": {
      "delete": {
        "summary": "Supprimer une filière par Id_filiere",
        "tags": ["Filiere"],
        "parameters": [
          {
            "in": "path",
            "name": "Id_filiere",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id_filiere de la filière (clé primaire)"
          }
        ],
        "responses": {
          "204": { "description": "Filiere supprimée" },
          "400": { "description": "Id_filiere invalide" },
          "404": { "description": "Filiere introuvable" }
        }
      }
    },
    "/Salle": {
      "get": {
        "summary": "Lister les salles",
        "tags": ["Salle"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Liste des salles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Salle" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une salle",
        "tags": ["Salle"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSalleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Salle créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Salle" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (Id_Salle déjà existant)" }
        }
      },
      "put": {
        "summary": "Modifier une salle",
        "tags": ["Salle"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSalleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Salle modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Salle" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit" }
        }
      }
    },
    "/Salle/{Id_Salle}": {
      "delete": {
        "summary": "Supprimer une salle par Id_Salle",
        "tags": ["Salle"],
        "parameters": [
          {
            "in": "path",
            "name": "Id_Salle",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id_Salle de la salle (clé primaire)"
          }
        ],
        "responses": {
          "204": { "description": "Salle supprimée" },
          "400": { "description": "Id_Salle invalide" },
          "404": { "description": "Salle introuvable" }
        }
      }
    },
    "/CorrespondanceFiliereUE": {
      "get": {
        "summary": "Lister les correspondances Filière-UE",
        "tags": ["CorrespondanceFiliereUE"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Liste des correspondances Filière-UE",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CorrespondanceFiliereUE" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer une correspondance Filière-UE",
        "tags": ["CorrespondanceFiliereUE"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCorrespondanceFiliereUEInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Correspondance Filière-UE créée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CorrespondanceFiliereUE" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (correspondance déjà existante)" }
        }
      },
      "put": {
        "summary": "Modifier une correspondance Filière-UE",
        "tags": ["CorrespondanceFiliereUE"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormCorrespondanceFiliereUEInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Correspondance Filière-UE modifiée",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CorrespondanceFiliereUE" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "409": { "description": "Conflit (correspondance déjà existante)" }
        }
      }
    },
    "/CorrespondanceFiliereUE/{Id_Filiere, code}": {
      "delete": {
        "summary": "Supprimer une correspondance à partir des 2 id (Id_Filiere et code)",
        "tags": ["CorrespondanceFiliereUE"],
        "parameters": [
          {
            "in": "path",
            "name": "Id_Filiere",
            "required": true,
            "schema": { "type": "string" },
            "description": "Filiere"
          },
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": { "type": "string" },
            "description": "UE"
          }
        ],
        "responses": {
          "204": { "description": "Correspondance supprimée" },
          "400": { "description": "Association invalide" },
          "404": { "description": "Correspondance introuvable" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtenu via /Utilisateur/login"
      }
    },
    "schemas": {
      "Planning": {
        "type": "object",
        "properties": {
          "Id_Planning": { "type": "integer" },
          "plage_horaire": { "type": "string" },
          "date_": { "type": "string", "format": "date" },
          "identifiant": { "type": "string", "description": "Identifiant du professeur" },
          "Id_Promo": { "type": "integer" },
          "code": { "type": "string", "description": "Code de l'UE" },
          "Id_Salle": { "type": "integer" }
        }
      },
      "CreatePlanningInput": {
        "type": "object",
        "required": ["plage_horaire", "date_", "identifiant", "Id_Promo", "code", "Id_Salle"],
        "properties": {
          "plage_horaire": { "type": "string", "example": "08:30-12:00" },
          "date_": { "type": "string", "format": "date", "example": "2024-09-15" },
          "identifiant": { "type": "string", "example": "mdupont" },
          "Id_Promo": { "type": "integer", "example": 1 },
          "code": { "type": "string", "example": "UE101" },
          "Id_Salle": { "type": "integer", "example": 2 }
        }
      },
      "UpdatePlanningInput": {
        "type": "object",
        "required": ["plage_horaire", "date_", "identifiant", "Id_Promo", "code", "Id_Salle"],
        "properties": {
          "plage_horaire": { "type": "string" },
          "date_": { "type": "string", "format": "date" },
          "identifiant": { "type": "string" },
          "Id_Promo": { "type": "integer" },
          "code": { "type": "string" },
          "Id_Salle": { "type": "integer" }
        }
      },
      "UtilisateurSansPassword": {
        "allOf": [
          { "$ref": "#/components/schemas/Utilisateur" }
        ]
      },
      "CreateUtilisateurInput": {
        "type": "object",
        "required": ["identifiant", "nom", "prenom", "email", "adresse", "telephone", "password"],
        "properties": {
          "identifiant": { "type": "string", "description": "Identifiant unique de l'utilisateur" },
          "nom": { "type": "string", "description": "Nom de famille" },
          "prenom": { "type": "string", "description": "Prénom" },
          "email": { "type": "string", "format": "email", "description": "Adresse email" },
          "adresse": { "type": "string", "description": "Adresse postale" },
          "telephone": { "type": "string", "description": "Numéro de téléphone" },
          "password": { "type": "string", "format": "password", "description": "Mot de passe (sera hashé)" }
        }
      },
      "Utilisateur": {
        "type": "object",
        "properties": {
          "identifiant": { 
            "type": "string",
            "description": "Identifiant unique de l'utilisateur"
          },
          "nom": { 
            "type": "string",
            "description": "Nom de famille"
          },
          "prenom": { 
            "type": "string",
            "description": "Prénom"
          },
          "email": { 
            "type": "string", 
            "format": "email",
            "description": "Adresse email"
          },
          "adresse": { 
            "type": "string",
            "description": "Adresse postale"
          },
          "telephone": { 
            "type": "string",
            "description": "Numéro de téléphone"
          }
        }
      },
      "UtilisateurAvecRole": {
        "type": "object",
        "properties": {
          "identifiant": { 
            "type": "string",
            "description": "Identifiant unique de l'utilisateur"
          },
          "nom": { 
            "type": "string",
            "description": "Nom de famille"
          },
          "prenom": { 
            "type": "string",
            "description": "Prénom"
          },
          "email": { 
            "type": "string", 
            "format": "email",
            "description": "Adresse email"
          },
          "adresse": { 
            "type": "string",
            "description": "Adresse postale"
          },
          "telephone": { 
            "type": "string",
            "description": "Numéro de téléphone"
          },
          "role": { 
            "type": "string",
            "enum": ["etudiant", "professeur", "secretaire"],
            "description": "Rôle de l'utilisateur"
          }
        }
      },
      "UtilisateurToken": {
        "type": "object",
        "properties": {
          "identifiant": { 
            "type": "string",
            "description": "Identifiant unique de l'utilisateur"
          },
          "email": { 
            "type": "string", 
            "format": "email",
            "description": "Adresse email"
          },
          "nom": { 
            "type": "string",
            "description": "Nom de famille"
          },
          "prenom": { 
            "type": "string",
            "description": "Prénom"
          },
          "role": { 
            "type": "string",
            "enum": ["etudiant", "professeur", "secretaire"],
            "description": "Rôle de l'utilisateur"
          }
        }
      },
      "UE": {
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "intitule": { "type": "string" },
          "nombre_heure": { "type": "integer" },
          "nombre_ects": { "type": "integer" },
          "identifiant": { 
            "$ref": "#/components/schemas/Professeur" 
          }
        }
      },
      "CreateUEInput": {
        "type": "object",
        "required": ["intitule", "nombre_heure", "nombre_ects", "identifiant"],
        "properties": {
          "intitule": { "type": "string" },
          "nombre_heure": { "type": "integer" },
          "nombre_ects": { "type": "integer" },
          "identifiant": { 
            "$ref": "#/components/schemas/Professeur" 
          }
        }
      },
      "UpdateUEInput": {
        "type": "object",
        "required": ["code", "intitule", "nombre_heure", "nombre_ects", "identifiant"],
        "properties": {
          "code": { "type": "string" },
          "intitule": { "type": "string" },
          "nombre_heure": { "type": "integer" },
          "nombre_ects": { "type": "integer" },
          "identifiant": { 
            "$ref": "#/components/schemas/Professeur" 
          }
        }
      },
      "Promo": {
        "type": "object",
        "properties": {
          "Id_Promo": { "type": "integer" },
          "nom": { "type": "string" },
          "annee_universitaire": { "type": "string" }
        }
      },
      "CreatePromoInput": {
        "type": "object",
        "required": ["Id_Promo", "nom", "annee_universitaire"],
        "properties": {
          "nom": { "type": "string" },
          "annee_universitaire": { "type": "string" }
        }
      },
      "UpdatePromoInput": {
        "type": "object",
        "required": ["nom", "annee_universitaire"],
        "properties": {
          "Id_Promo": { "type": "integer" },
          "nom": { "type": "string" },
          "annee_universitaire": { "type": "string" }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "Id_Note": { "type": "string" },
          "note": { "type": "float" },
          "identifiant": {
            "$ref": "#/components/schemas/Etudiant" 
          },
          "code": {
            "$ref": "#/components/schemas/UE" 
          }
        }
      },
      "CreateNoteInput": {
        "type": "object",
        "required": ["note"],
        "properties": {
          "note": { "type": "float" },
          "identifiant": {
            "$ref": "#/components/schemas/Etudiant" 
          },
          "code": {
            "$ref": "#/components/schemas/UE" 
          }
        }
      },
      "UpdateNoteInput": {
        "type": "object",
        "required": ["Id_Note", "note"],
        "properties": {
          "Id_Note": { "type": "string" },
          "note": { "type": "float" },
          "identifiant": {
            "$ref": "#/components/schemas/Etudiant" 
          },
          "code": {
            "$ref": "#/components/schemas/UE" 
          }
        }
      },
      "Filiere": {
        "type": "object",
        "properties": {
          "Id_filiere": { "type": "string" },
          "nom_filiere": { "type": "string" }
        }
      },
      "CreateFiliereInput": {
        "type": "object",
        "required": ["nom_filiere"],
        "properties": {
          "nom_filiere": { "type": "string" }
        }
      },
      "UpdateFiliereInput": {
        "type": "object",
        "required": ["Id_filiere", "nom_filiere"],
        "properties": {
          "nom": { "type": "string" },
          "prenom": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "adresse": { "type": "string" },
          "telephone": { "type": "string", "format": "phone_number" },
          "mdp": { "type": "string", "format": "password" }
        }
      },
      "Salle": {
        "type": "object",
        "properties": {
          "Id_Salle": { "type": "string" },
          "code_salle": { "type": "string" }
        }
      },
      "CreateSalleInput": {
        "type": "object",
        "required": ["code_salle"],
        "properties": {
          "code_salle": { "type": "string" }
        }
      },
      "UpdateSalleInput": {
        "type": "object",
        "required": ["Id_Salle", "code_salle"],
        "properties": {
          "Id_Salle": { "type": "string" },
          "code_salle": { "type": "string" }
        }
      },
      "CorrespondanceFiliereUE": {
        "type": "object",
        "properties": {
          "Id_Filiere": {
            "$ref": "#/components/schemas/Filiere" 
          },
          "code": {
            "$ref": "#/components/schemas/UE" 
          }
        }
      },
      "FormCorrespondanceFiliereUEInput": {
        "type": "object",
        "required": ["Id_Filiere", "code"],
        "properties": {
          "Id_Filiere": { 
            "$ref": "#/components/schemas/Filiere" 
          },
          "code": {
            "$ref": "#/components/schemas/UE" 
          }
        }
      }
    }
  }
}


